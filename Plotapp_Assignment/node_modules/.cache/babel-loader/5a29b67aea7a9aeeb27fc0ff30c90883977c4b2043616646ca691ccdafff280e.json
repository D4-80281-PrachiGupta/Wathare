{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/Documents/Projects/Wathare/Frontend/plotapp/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport ChartComponent from './ChartComponent';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jsonData, setJsonData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [mydata, setMyData] = useState([]);\n  const targetTimestamp = \"2023-12-31T19:12:00.000+00:00\"; // Change this to your target timestamp\n\n  useEffect(() => {\n    const addMissingTimeStamp = data => {\n      const timestamps = data.map(item => new Date(item.time).getTime());\n      const missingTimestamp = timestamps.find((timestamp, index, array) => {\n        if (index === array.length - 1) return false;\n        const nextTimestamp = array[index + 1];\n        return nextTimestamp - timestamp > 1000; // Assuming a 1 second difference\n      });\n      if (missingTimestamp) {\n        const missingItem = {\n          id: 'missing',\n          // You can set an appropriate ID here\n          time: new Date(missingTimestamp + 1000).toISOString(),\n          // Assuming a 1 second difference\n          value: \"NA\" // Assuming a placeholder value for missing data\n        };\n\n        // Insert the missing item\n        const insertionIndex = timestamps.indexOf(missingTimestamp) + 1;\n        data.splice(insertionIndex, 0, missingItem);\n      }\n      return data;\n    };\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/sample-data.json'); // Adjust the path as needed\n        let data = await response.json();\n        const mdo = addMissingTimeStamp(data);\n        for (let i = 0; i < data.length; i++) {\n          //data\n          console.log(mdo[i].ts);\n        }\n        setJsonData(mdo);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once\n\n  useEffect(() => {\n    const filtered = jsonData.filter(item => item.time === targetTimestamp);\n    setFilteredData(filtered);\n  }, [jsonData, targetTimestamp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fw-bold text-center\",\n      children: \"Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        display: 'flex'\n      },\n      children: jsonData.map(item => /*#__PURE__*/_jsxDEV(ChartComponent, {\n        ts: item.ts,\n        status: item.machine_status,\n        value: item.vibration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/4v2E6pbwJu4edsUKcNa/+UFYN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","ChartComponent","jsxDEV","_jsxDEV","App","_s","jsonData","setJsonData","filteredData","setFilteredData","mydata","setMyData","targetTimestamp","addMissingTimeStamp","data","timestamps","map","item","Date","time","getTime","missingTimestamp","find","timestamp","index","array","length","nextTimestamp","missingItem","id","toISOString","value","insertionIndex","indexOf","splice","fetchData","response","fetch","json","mdo","i","console","log","ts","error","filtered","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","status","machine_status","vibration","_c","$RefreshReg$"],"sources":["/home/gaurav/Documents/Projects/Wathare/Frontend/plotapp/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport ChartComponent from './ChartComponent';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nfunction App() {\n  const [jsonData, setJsonData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [mydata, setMyData] = useState([]);\n  const targetTimestamp = \"2023-12-31T19:12:00.000+00:00\"; // Change this to your target timestamp\n\n  useEffect(() => {\n    const addMissingTimeStamp = (data) => {\n\n      const timestamps = data.map(item => new Date(item.time).getTime());\n      const missingTimestamp = timestamps.find((timestamp, index, array) => {\n        if (index === array.length - 1) return false;\n        const nextTimestamp = array[index + 1];\n        return nextTimestamp - timestamp > 1000; // Assuming a 1 second difference\n      });\n\n      if (missingTimestamp) {\n        const missingItem = {\n          id: 'missing', // You can set an appropriate ID here\n          time: new Date(missingTimestamp + 1000).toISOString(), // Assuming a 1 second difference\n          value: \"NA\" // Assuming a placeholder value for missing data\n        };\n\n        // Insert the missing item\n        const insertionIndex = timestamps.indexOf(missingTimestamp) + 1;\n        data.splice(insertionIndex, 0, missingItem);\n      }\n\n      return data;\n    }\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/sample-data.json'); // Adjust the path as needed\n        let data = await response.json();\n        const mdo = addMissingTimeStamp(data);\n        for (let i = 0; i < data.length; i++) {\n          //data\n          console.log(mdo[i].ts);\n        }\n        setJsonData(mdo);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n\n\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once\n\n  useEffect(() => {\n    const filtered = jsonData.filter(item => item.time === targetTimestamp);\n    setFilteredData(filtered);\n  }, [jsonData, targetTimestamp]);\n\n  return (\n    <div>\n      <h1 className='fw-bold text-center'>Data</h1>\n      <div className='container-fluid' style={{ display: 'flex' }}>\n        {jsonData.map(item => (\n          < ChartComponent ts={item.ts} status={item.machine_status} value={item.vibration} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}