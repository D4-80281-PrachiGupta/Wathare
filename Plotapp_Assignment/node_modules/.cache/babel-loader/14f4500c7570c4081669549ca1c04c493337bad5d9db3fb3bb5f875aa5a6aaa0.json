{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/Documents/Projects/Wathare/Frontend/plotapp/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport ChartComponent from './ChartComponent';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jsonData, setJsonData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const targetTimestamp = \"2023-12-31T19:12:00.000+00:00\"; // Change this to your target timestamp\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/sample-data.json'); // Adjust the path as needed\n        const data = await response.json();\n        setJsonData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once\n\n  useEffect(() => {\n    const filtered = jsonData.filter(item => item.time === targetTimestamp);\n    setFilteredData(filtered);\n  }, [jsonData, targetTimestamp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fw-bold text-center\",\n      children: \"Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        display: 'flex'\n      },\n      children: jsonData.map(item => /*#__PURE__*/_jsxDEV(ChartComponent, {\n        ts: item.ts,\n        status: item.machine_status,\n        value: item.vibration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JKEHsXa2BcQwVph3KEIot/yoH/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","ChartComponent","jsxDEV","_jsxDEV","App","_s","jsonData","setJsonData","filteredData","setFilteredData","targetTimestamp","fetchData","response","fetch","data","json","error","console","filtered","filter","item","time","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","map","ts","status","machine_status","value","vibration","_c","$RefreshReg$"],"sources":["/home/gaurav/Documents/Projects/Wathare/Frontend/plotapp/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport ChartComponent from './ChartComponent';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nfunction App() {\n  const [jsonData, setJsonData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const targetTimestamp = \"2023-12-31T19:12:00.000+00:00\"; // Change this to your target timestamp\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/sample-data.json'); // Adjust the path as needed\n        const data = await response.json();\n        setJsonData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once\n\n  useEffect(() => {\n    const filtered = jsonData.filter(item => item.time === targetTimestamp);\n    setFilteredData(filtered);\n  }, [jsonData, targetTimestamp]);\n\n  return (\n    <div>\n      <h1 className='fw-bold text-center'>Data</h1>\n      <div className='container-fluid' style={{ display: 'flex' }}>\n        {jsonData.map(item => (\n          < ChartComponent ts={item.ts} status={item.machine_status} value={item.vibration} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,kCAAkC;AACzC,OAAO,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMW,eAAe,GAAG,+BAA+B,CAAC,CAAC;;EAEzDV,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACnD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCR,WAAW,CAACO,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERX,SAAS,CAAC,MAAM;IACd,MAAMkB,QAAQ,GAAGZ,QAAQ,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKX,eAAe,CAAC;IACvED,eAAe,CAACS,QAAQ,CAAC;EAC3B,CAAC,EAAE,CAACZ,QAAQ,EAAEI,eAAe,CAAC,CAAC;EAE/B,oBACEP,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAIoB,SAAS,EAAC,qBAAqB;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CxB,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAACK,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAP,QAAA,EACzDhB,QAAQ,CAACwB,GAAG,CAACV,IAAI,iBAChBjB,OAAA,CAAEF,cAAc;QAAC8B,EAAE,EAAEX,IAAI,CAACW,EAAG;QAACC,MAAM,EAAEZ,IAAI,CAACa,cAAe;QAACC,KAAK,EAAEd,IAAI,CAACe;MAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACpF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAlCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}